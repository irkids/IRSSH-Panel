global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL options
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 2048

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend main
    bind *:80
    bind *:443 ssl crt /etc/ssl/private/combined.pem alpn h2,http/1.1
    
    # HSTS
    http-response set-header Strict-Transport-Security max-age=31536000
    
    # Redirect HTTP to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    
    # ACLs
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl api_path path_beg /api
    
    # Statistics
    stats enable
    stats uri /haproxy?stats
    stats realm Haproxy\ Statistics
    stats auth admin:your_strong_password
    
    # Default backend
    use_backend websocket_backend if is_websocket
    use_backend api_backend if api_path
    default_backend web_backend

backend web_backend
    balance roundrobin
    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost
    http-check expect status 200
    server web1 10.0.0.10:8080 check cookie s1
    server web2 10.0.0.11:8080 check cookie s2
    server web3 10.0.0.12:8080 check cookie s3 backup

backend api_backend
    balance leastconn
    option httpchk GET /health HTTP/1.1\r\nHost:\ localhost
    server api1 10.0.0.20:3000 check
    server api2 10.0.0.21:3000 check
    server api3 10.0.0.22:3000 check backup

backend websocket_backend
    balance source
    option httpchk GET /health HTTP/1.1\r\nHost:\ localhost
    server ws1 10.0.0.30:8081 check
    server ws2 10.0.0.31:8081 check

listen stats
    bind *:8404
    stats enable
    stats uri /monitor
    stats refresh 5s
    stats show-node
    stats auth admin:your_strong_password
