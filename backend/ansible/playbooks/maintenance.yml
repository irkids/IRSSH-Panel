---
# System maintenance playbook
- name: IRSSH Panel System Maintenance
  hosts: all
  become: true
  vars:
    panel_dir: /opt/irssh-panel
    log_dir: /var/log/irssh
    backup_dir: "{{ panel_dir }}/backups"
    db_name: irssh_panel
    log_retention_days: 30
    backup_retention_days: 7
    
  tasks:
    - name: Check system health
      block:
        - name: Check disk space
          shell: df -h / | awk 'NR==2 {print $5}' | sed 's/%//'
          register: disk_usage
          changed_when: false

        - name: Check memory usage
          shell: free | awk '/Mem:/ {printf("%.0f", $3/$2 * 100)}'
          register: memory_usage
          changed_when: false

        - name: Check CPU load
          shell: uptime | awk -F'load average:' '{ print $2 }' | awk -F, '{ print $1 }'
          register: cpu_load
          changed_when: false

        - name: Alert if resources are critical
          debug:
            msg: "Warning: {{ item.name }} usage is critical ({{ item.value }}%)"
          when: item.value|int > item.threshold|int
          loop:
            - { name: "Disk", value: "{{ disk_usage.stdout }}", threshold: 90 }
            - { name: "Memory", value: "{{ memory_usage.stdout }}", threshold: 90 }

    - name: Optimize database
      block:
        - name: Vacuum database
          command: vacuumdb -z -d {{ db_name }}
          become: true
          become_user: postgres
          register: vacuum_result
          changed_when: vacuum_result.rc == 0

        - name: Analyze database
          command: vacuumdb -a -d {{ db_name }}
          become: true
          become_user: postgres
          register: analyze_result
          changed_when: analyze_result.rc == 0

    - name: Clean old logs
      block:
        - name: Find old log files
          find:
            paths: "{{ log_dir }}"
            patterns: "*.log*"
            age: "{{ log_retention_days }}d"
          register: old_logs

        - name: Remove old log files
          file:
            path: "{{ item.path }}"
            state: absent
          loop: "{{ old_logs.files }}"

    - name: Manage backups
      block:
        - name: Create backup directory
          file:
            path: "{{ backup_dir }}"
            state: directory
            mode: '0
