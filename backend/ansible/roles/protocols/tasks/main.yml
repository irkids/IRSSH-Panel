# ansible/roles/protocols/tasks/main.yml
---
- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  when: ansible_os_family == 'Debian'

- name: Update package cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'

- name: Install common dependencies
  apt:
    name:
      - curl
      - wget
      - git
      - iptables-persistent
      - fail2ban
      - ufw
    state: present

- name: Create protocol directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - /etc/irssh
    - /etc/irssh/ssl
    - /etc/irssh/configs
    - /var/log/irssh

- name: Configure UFW
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  loop:
    - { port: "{{ ssh_port }}", proto: "tcp" }
    - { port: "{{ l2tp_port }}", proto: "udp" }
    - { port: "{{ ikev2_port }}", proto: "udp" }
    - { port: "{{ cisco_port }}", proto: "tcp" }
    - { port: "{{ wireguard_port }}", proto: "udp" }
    - { port: "{{ singbox_port }}", proto: "tcp" }

- name: Enable UFW
  ufw:
    state: enabled
    policy: deny

- name: Configure fail2ban
  template:
    src: fail2ban/jail.local.j2
    dest: /etc/fail2ban/jail.local
  notify: restart fail2ban

- name: Include protocol-specific tasks
  include_tasks: "{{ item }}"
  with_items:
    - ssh.yml
    - l2tp.yml
    - ikev2.yml
    - cisco.yml
    - wireguard.yml
    - singbox.yml

- name: Create shared secret key for protocol authentication
  shell: |
    openssl rand -base64 48 > /etc/irssh/secret.key
    chmod 600 /etc/irssh/secret.key
  args:
    creates: /etc/irssh/secret.key

- name: Add protocol monitoring to cron
  cron:
    name: "Monitor {{ item }} service"
    job: "/usr/local/bin/monitor_protocol.sh {{ item }}"
    minute: "*/5"
  loop:
    - ssh
    - l2tp
    - ikev2
    - cisco
    - wireguard
    - singbox

- name: Create protocol monitoring script
  template:
    src: scripts/monitor_protocol.sh.j2
    dest: /usr/local/bin/monitor_protocol.sh
    mode: '0755'

- name: Configure logrotate for protocol logs
  template:
    src: logrotate/protocols.j2
    dest: /etc/logrotate.d/irssh-protocols
    mode: '0644'

- name: Ensure all services are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - sshd
    - xl2tpd
    - strongswan
    - ocserv
    - wg-quick@wg0
    - singbox
  ignore_errors: yes  # Some services might not be installed yet

- name: Configure system parameters
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_items:
    - { key: 'net.ipv4.ip_forward', value: '1' }
    - { key: 'net.ipv4.conf.all.accept_redirects', value: '0' }
    - { key: 'net.ipv4.conf.all.send_redirects', value: '0' }
    - { key: 'net.ipv4.tcp_max_syn_backlog', value: '4096' }
    - { key: 'net.ipv4.tcp_syncookies', value: '1' }
    - { key: 'net.ipv4.tcp_max_tw_buckets', value: '5000' }
    - { key: 'net.ipv4.tcp_fin_timeout', value: '30' }
    - { key: 'net.core.somaxconn', value: '4096' }

- name: Create backup script
  template:
    src: scripts/backup_protocols.sh.j2
    dest: /usr/local/bin/backup_protocols.sh
    mode: '0755'

- name: Schedule daily backups
  cron:
    name: "Daily protocol configuration backup"
    job: "/usr/local/bin/backup_protocols.sh"
    hour: "3"
    minute: "0"

- name: Ensure backup directory exists
  file:
    path: /var/backups/irssh
    state: directory
    mode: '0750'

# Monitoring setup
- name: Create protocol status check script
  template:
    src: scripts/check_protocols.sh.j2
    dest: /usr/local/bin/check_protocols.sh
    mode: '0755'

- name: Add protocol status check to cron
  cron:
    name: "Check protocol status"
    job: "/usr/local/bin/check_protocols.sh"
    minute: "*/15"

# Security hardening
- name: Set secure permissions on configuration files
  file:
    path: "{{ item }}"
    mode: '0600'
    owner: root
    group: root
  with_fileglob:
    - /etc/irssh/configs/*
    - /etc/irssh/ssl/*

- name: Configure audit logging
  template:
    src: audit/audit.rules.j2
    dest: /etc/audit/rules.d/protocols.rules
  notify: restart auditd
