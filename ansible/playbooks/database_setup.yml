---
- name: Configure Database Servers
  hosts: database_servers
  become: yes
  vars_files:
    - vars/database.yml

  roles:
    - { role: postgresql, tags: ['postgresql'] }
    - { role: redis, tags: ['redis'] }
    - { role: mongodb, tags: ['mongodb'] }

  tasks:
    - name: Configure PostgreSQL
      template:
        src: templates/postgresql/{{ item }}.j2
        dest: "{{ postgresql_config_path }}/{{ item }}"
      with_items:
        - postgresql.conf
        - pg_hba.conf
        - pg_ident.conf
      notify: restart postgresql

    - name: Set up PostgreSQL replication
      block:
        - name: Create replication user
          postgresql_user:
            name: "{{ postgresql_replication_user }}"
            password: "{{ postgresql_replication_password }}"
            role_attr_flags: REPLICATION,LOGIN
          when: inventory_hostname == groups['database_servers'][0]

        - name: Configure streaming replication
          template:
            src: templates/postgresql/recovery.conf.j2
            dest: "{{ postgresql_data_dir }}/recovery.conf"
          when: inventory_hostname != groups['database_servers'][0]
      when: enable_replication | bool

    - name: Configure Redis
      template:
        src: templates/redis/{{ item }}.j2
        dest: "{{ redis_config_path }}/{{ item }}"
      with_items:
        - redis.conf
        - sentinel.conf
      notify: restart redis

    - name: Set up Redis Sentinel
      template:
        src: templates/redis/sentinel.conf.j2
        dest: "{{ redis_config_path }}/sentinel.conf"
      notify: restart redis-sentinel
      when: enable_redis_sentinel | bool

    - name: Configure MongoDB
      template:
        src: templates/mongodb/{{ item }}.j2
        dest: "{{ mongodb_config_path }}/{{ item }}"
      with_items:
        - mongod.conf
        - keyfile
      notify: restart mongodb

    - name: Initialize MongoDB Replica Set
      command: "{{ mongodb_shell_command }} --eval '{{ mongodb_replicaset_config | to_json }}'"
      when: 
        - enable_mongodb_replication | bool
        - inventory_hostname == groups['database_servers'][0]

  handlers:
    - name: restart postgresql
      systemd:
        name: postgresql
        state: restarted

    - name: restart redis
      systemd:
        name: redis-server
        state: restarted

    - name: restart redis-sentinel
      systemd:
        name: redis-sentinel
        state: restarted

    - name: restart mongodb
      systemd:
        name: mongod
        state: restarted
